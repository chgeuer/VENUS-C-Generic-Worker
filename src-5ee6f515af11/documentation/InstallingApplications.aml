<?xml version="1.0" encoding="utf-8"?>
<topic id="a84ddafe-4ce1-4fa0-8e9d-9e99c8847195" revisionNumber="1">
  <developerHowToDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->
    <introduction>
      <para>Here you'll get an explanation of how the installation procedure works. If you want to know
      how you can do this programmatically, please take a look at <link xlink:href="f9d0e75e-9b2d-4f8e-bfd6-1f2df762ab24">Upload Application</link> instead.</para>
    </introduction>
    <!-- Optional procedures followed by optional code example but must have
         at least one procedure or code example -->
    <procedure>
      <title>Installing Applications</title>
      <steps class="ordered">
        <step>
          <content>
            <para>To successfully install an application, for further using in the Generic Worker, 
            you need to package all necessary files to run the application into one zip file. Furthermore you need
            an application description which describes the proper commandline execution of the application.</para>
          </content>
        </step>
        <step>
          <content>
            <para>Upload your application as a single zip file to your datastore. You also have to serialize the application
            description into an xml stucture and upload that to the datastore, too. Remember the place where you have stored
            your zip file and the associated description, you have to submit them in your job description each time you submit a new job.</para>
            <mediaLink>
              <image placement="center" xlink:href="Slide6"/>
            </mediaLink>
          </content>
        </step>
      </steps>
      <!-- <conclusion>Optional conclusion</conclusion> -->
    </procedure>
    <!-- <codeExample>Optional code example</codeExample> -->
    <!-- <buildInstructions>Optional instructions for building a
         code example.</buildInstructions> -->
    <!-- <robustProgramming>Optional discussion of error handling and other
         issues related to writing solid code.</robustProgramming> -->
    <!-- <security>Optional discussion of security issues.</security> -->
    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID">Link text</link>
      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>
      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerHowToDocument>
</topic>