<?xml version="1.0" encoding="utf-8"?>
<topic id="0bac105e-a510-45ba-90e7-7839bfbc40bb" revisionNumber="1">
  <developerHowToDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->
    <introduction>
      <para>Here you'll get an explanation of how a job submission works. If you want to know
      how you can do this programmatically, please take a look at <link xlink:href="c99210d6-6f06-4272-86f9-6f6590989591">Submit Jobs</link> instead.</para>
    </introduction>
    <!-- Optional procedures followed by optional code example but must have
         at least one procedure or code example -->
    <procedure>
      <title>Submitting Jobs</title>
      <steps class="ordered">
        <step>
          <content>
            <para>To submit a job you need to provide a job description, which describes which argument should be set
            and which value should be provided for the arguments. If you want to procede any input datafiles, you need
            to upload them from your local disk to the datastore or you can provide an already existing datafile, 
            which could have been created through a previous finished job.</para>
            <mediaLink>
              <image placement="center" xlink:href="Slide9"/>
            </mediaLink>
          </content>
        </step>
        <step>
          <content>
            <para>You can also submit jobs, through the <application>LocalJobSubmission service</application>, programmatically 
            by our application uploaded to the AppStore. You can read more about it under <link xlink:href="c99210d6-6f06-4272-86f9-6f6590989591">Local Job Submission</link>.</para>
          </content>
        </step>
      </steps>
      <!-- <conclusion>Optional conclusion</conclusion> -->
    </procedure>
    <!-- <codeExample>Optional code example</codeExample> -->
    <!-- <buildInstructions>Optional instructions for building a
         code example.</buildInstructions> -->
    <!-- <robustProgramming>Optional discussion of error handling and other
         issues related to writing solid code.</robustProgramming> -->
    <!-- <security>Optional discussion of security issues.</security> -->
    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID">Link text</link>
      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>
      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerHowToDocument>
</topic>