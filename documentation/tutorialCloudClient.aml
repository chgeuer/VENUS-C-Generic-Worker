<?xml version="1.0" encoding="utf-8"?>
<topic id="5bcbb1cf-8765-4823-9f3e-a51377cf4788" revisionNumber="1">
  <developerConceptualDocument
  xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
  xmlns:xlink="http://www.w3.org/1999/xlink">

    <!--
<summary>
<para>Optional summary abstract</para>
</summary>
-->

    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
titles. Specify a numeric value as the inner text to limit it to
a specific number of sub-topics when creating the outline. Specify
zero (0) to limit it to top-level sections only. -->
      <!-- <autoOutline /> -->

      <para>
        In this tutorial, you will be presented with a simple application which will be examined to understand the following aspects of this simple application.
      </para>

      <list class="bullet">
        <listItem>
          <para>
            What are the acceptable input parameters
          </para>
        </listItem>

        <listItem>
          <para>
            What is the expected output
          </para>
        </listItem>

        <listItem>
          <para>
            How are these input and output fields passed to the application
          </para>
        </listItem>

        <listItem>
          <para>
            What does the commandline execution command of this application look like (This step is necessary because the inferences made from this examination of the Commandline execution of this simple application will be used to model the ApplicationDescription).
          </para>
        </listItem>
      </list>

     
    </introduction>

    <!-- Add one or more top-level section elements. These are collapsible.
If using <autoOutline />, add an address attribute to identify it
and specify a title so that it can be jumped to with a hyperlink. -->
    <section>


      <content>
        <para>
          Writing your own GW Client involves the following steps:
        </para>

        <list class="ordered">
          <listItem>
            <para>
              Required components : Understanding what are the required components for going ahead with writing your own GW Client.

            </para>
          </listItem>

          <listItem>

            <para>
              Running the application on your desktop : Understanding how is the application run on your desktop without connecting to the cloud which in turn would give us a mental image of the application and its necessary inputs and expected output.
            </para>
          </listItem>

          <listItem>
            <para>
              Writing your own Application Description
            </para>

            <list class="bullet">
              <listItem>
                <para>
                  Understanding the Application Description class and its mandatory fields <link xlink:href="8e9fde66-8469-4594-94e6-01731adbbd35">here</link>
                </para>
              </listItem>

              <listItem>
                <para>
                  Mapping Commandline Arguments for the application execution to the CommandLineArguments Class of the Application Description <link xlink:href="0bb6bb94-8409-4fe6-b7ca-07039245a234">here</link>
                </para>
              </listItem>
            </list>
          </listItem>

          <listItem>
            <para>
              Zipping and Uploading ApplicationDescription and Application executable files to the Cloud <link xlink:href="d8424506-ccfe-427e-bd32-d751a9a42e83">here</link>
            </para>
          </listItem>


          <listItem>
            <para>
              Writing your own Job Description
            </para>
            <list class="bullet">

              <listItem>
                <para>
                  Understanding Job Description class and its Mandatory fields <link xlink:href="e3d9d0a6-c7a3-46a0-9708-5edc4dfa84fb">here</link>
                </para>
              </listItem>

              <listItem>



                <para>
                  Modeling your Job description according to the Application description written in the previous step <link xlink:href="7e60539b-775d-4eb4-b0e7-f971cfadeeeb">here</link>
                </para>
              </listItem>

              <listItem>
                <para>
                  Job submission step <link xlink:href="fec92d86-badf-4499-9186-b5f4aca2c4fc">here</link>
                </para>
              </listItem>

            </list>
          </listItem>




        </list>
      </content>
    </section>


    <section address="ox1">
      <title>Required components</title>




      <content>
        <procedure>
          <title>

          </title>

          <steps class="ordered">

            <step>
              <content>
                <para>Application executable</para>
              </content>
            </step>

            <step>
              <content>
                <para>Application's description</para>
              </content>
            </step>


            <step>
              <content>
                <para>Job description</para>
              </content>
            </step>
          </steps>
          <conclusion>
            <content>

            </content>
          </conclusion>

        </procedure>
        <alert>
          <para>
            Application's executable file and its file name and path are necessary for building your application description.
          </para>

        </alert>
        <!-- If a section contains a sections element, its content creates
sub-sections. These are not collapsible.
<sections>
<section address="SubSection1">
<title>Sub-section 1</title>
<content>
<para>Sub-section content.</para>
</content>
</section>
<section address="SubSection2">
<title>Sub-section 2</title>
<content>
<para>Sub-section content.</para>
</content>
</section>
</sections> -->


      </content>
    </section>


    <section address="ox2">
      <title>Running the application on your desktop</title>
      <content>

        <para>
          In this section we will briefly talk about an example application which is run on a desktop without connecting to the cloud, just to give you a picture of the following aspects of the application
        which you would be required to know to come up with your own version of application description and job description for starters. </para>
        
        <procedure>
          <title>

          </title>

          <steps class="bullet">
            <step>
              <content>
                <para>
                  Application input fields

                </para>
              </content>
            </step>

            <step>
              <content>
                <para>
                  Application output fields
                </para>
              </content>
            </step>
          </steps>
          <para>
          We will come to more complex aspects like different parameters required to establish a connection with the cloud a bit latter in this course.
        </para>
          <conclusion>
            <content>

            </content>
          </conclusion>
        </procedure>

        <mediaLink>
          <image xlink:href="tutorial1"/>
        </mediaLink>



        <para>The above screenshot shows a simpleApplication being run on command Prompt console of a local desktop.</para>
        <para>
          The command to execute the batch file looks like this : <legacyBold>SimpleApplication -input input.txt -outputfiles 3</legacyBold>
        </para>


        <procedure>
          <title>

          </title>
          <steps class="bullet">
            <step>
              <content>
                <para>Input parameter as "-input" followed by the input file "input.txt" whose contents are visible in the below picture</para>
              </content>
            </step>

            <step>
              <content>
                <para>Output parameter as "-outfiles" followed by the number of output files to be generated after the processing the input file </para>
              </content>
            </step>

          </steps>
        </procedure>
        <mediaLink>
          <image xlink:href="tutorial2"/>
        </mediaLink>

        <alert class="note">
          <para>The SimpleApplication is just dividing the input file into 3 different files each containing 1 line of the original input file</para>
        </alert>
        <mediaLink>
          <image xlink:href="tutorial3"/>
        </mediaLink>

        <para>
          <legacyBold>
            Next topics in writing your own client 
          </legacyBold> <link xlink:href="8e9fde66-8469-4594-94e6-01731adbbd35">here</link>
        </para>

      </content>

    </section>

    <relatedTopics>
      <!-- One or more of the following:
- A local link
- An external link
- A code entity reference

<link xlink:href="Other Topic's ID"/>
<link xlink:href="Other Topic's ID">Link inner text</link>

<externalLink>
<linkText>Link text</linkText>
<linkAlternateText>Optional alternate link text</linkAlternateText>
<linkUri>URI</linkUri>
</externalLink>

<codeEntityReference>API member ID</codeEntityReference>

Examples:

<link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
<link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

<externalLink>
<linkText>SHFB on CodePlex</linkText>
<linkAlternateText>Go to CodePlex</linkAlternateText>
<linkUri>http://shfb.codeplex.com</linkUri>
</externalLink>

<codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
<codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
<codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
<codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
<codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
<codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
<codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
-->
    </relatedTopics>
  </developerConceptualDocument>
</topic>
