<?xml version="1.0" encoding="utf-8"?>
<topic id="f41be975-ce7d-4996-ac2e-d561604021bd" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->

    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!-- <autoOutline /> -->


    </introduction>

    <!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
    <section address="Section1">
      <title>Submitting and retrieving job hierarchy under the root</title>
      <content>
        <para>
          Let us say you submit a job and this job submits local jobs shown in the section <link xlink:href="50be658b-c551-4247-9b49-3103fe0e88c0">Local Job Submission</link>
        </para>
        <code title="Use a jobmanagement client and submit the root job" >
          var user = "Researcher";

          GenericWorkerJobManagementClient jobManagementPortal = GenericWorkerJobManagementClient.CreateSecureClient(
          new EndpointAddress(new Uri(secureGenericWorkerURL), new DnsEndpointIdentity("myexperiment.cloudapp.net")),
          new EndpointAddress(new Uri(securityTokenServiceURL), new DnsEndpointIdentity("myexperiment.cloudapp.net")),
          user, "secret",
          X509Helper.GetX509Certificate2(
          StoreLocation.LocalMachine, StoreName.My,
          "123456789ABCDEF123456789ABCDEF123456789A",
          X509FindType.FindByThumbprint));

          CreateActivityResponse resp = jobManagementPortal.SubmitVENUSJob(new VENUSJobDescription()
          {
          ApplicationIdentificationURI = "http://www.microsoft.com/someapp",
          CustomerJobID = "jobid://Root",
          JobName = "Demo job for demonstrating group definitions"
          });


        </code>

        <para>Now we can use the GetHierarchy Method to get a list of jobs under the root job</para>
        <code title="retrieve the jobs belonging to a hierarchy" >
          EndpointReferenceType root = resp.CreateActivityResponse1.ActivityIdentifier;
          var jobHierarchy = jobManagementPortal.GetHierarchy(root);

        </code>

        <para>If we have have an reference to one of the jobs which is part of the job hierarchy, we can retrieve the root job by using GetRoot method</para>
        <code title="retrieve the jobs belonging to a hierarchy" >
          EndpointReferenceType someJob = jobHierarchy.ElementAt(2);
          root = jobManagementPortal.GetRoot(someJob);

        </code>
        <para>Similar to groups we can cancel a hierarchy, by retrieving all its jobs and then call TerminateActivities, or we use the comfort method CancelHierarchy and just specify the root of the hierarchy that we want to cancel</para>
        <code  title="cancel all jobs belonging to a hierarchy">
          jobManagementPortal.CancelHierarchy(root);

        </code>

      </content>
    </section>

    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>
