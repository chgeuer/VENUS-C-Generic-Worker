  <?xml version="1.0" encoding="utf-8"?>
  <topic id="7b6ab8f1-9ecc-4d60-83a4-ec241d5436fd" revisionNumber="1">
    <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

      <!--
  <summary>
  <para>Optional summary abstract</para>
  </summary>
  -->

      <introduction>
        <!-- Uncomment this to generate an outline of the section and sub-section
  titles. Specify a numeric value as the inner text to limit it to
  a specific number of sub-topics when creating the outline. Specify
  zero (0) to limit it to top-level sections only. -->
        <!-- <autoOutline /> -->


      </introduction>

      <!-- Add one or more top-level section elements. These are collapsible.
  If using <autoOutline />, add an address attribute to identify it
  and specify a title so that it can be jumped to with a hyperlink. -->
      <section address="ox7">
        <content>


          <para>
            In the Application Description section we saw that what it does, is define the necessary parameters of an application to run.
          </para>
          <para>
            On similar lines JobDescription is the section where you can assign values to the necessary fields mentioned in ApplicationDescription and to instruct GenericWorker to download the necessary files before the execution begins and upload the output files after the execution.
          </para>

          <para>
            Think of Application description as some sort of an query modelled according to the application's commandline execution command.
          </para>
          <para>
            And this in turn would make Job description to be a means of supplying necessary paramters to the query that was modelled as part of Application Description step.
          </para>



          <mediaLink>
            <image xlink:href="tutorial6"/>
          </mediaLink>

          <procedure>
            <title>
              VENUSJobDescription Class Mandatory fields
            </title>
            <steps class ="bullet">
              <step>
                <content>
                  <para>
                    ApplicationIdentificationURI : Identifies the application which is to be executed for this Job.
                  </para>
                  <para>
                    The counterpart of applicationDescription.ApplicationIdentificationURI in the jobDescription class.
                  </para>
                </content>
              </step>

              <step>
                <content>
                  <para>
                    CustomerJobID : Identifies the Job Number
                  </para>
                </content>
              </step>

              <step>
                <content>
                  <para>
                    AppPkgReference : provides the reference to the address location in the cloud of the Application zip file that was uploaded as part of the Application Description step
                  </para>
                  <para>
                    To populate this field in jobDescription use the same applicationDataContainer used in the application description's "Zipping and Uploading ApplicationDescription and Application executable files to the Cloud" step 5, and get the address referenced by "applicationBlob" for applicationDescription.ApplicationIdentificationURI + "_App".


                  </para>

                </content>
              </step>

              <step>
                <content>
                  <para>
                    AppDescReference : provides the reference to the address location of the Application Description that was uploaded as part of the Application Description step
                  </para>

                  <para>
                    To populate this field in jobDescription use the same applicationDataContainer used in the application description's "Zipping and Uploading ApplicationDescription and Application executable files to the Cloud" step 2, and get the address referenced by "applicationBlob" for applicationDescription.ApplicationIdentificationURI + "_Desc".

                  </para>
                </content>
              </step>

              <step>
                <content>
                  <para>
                    JobArgs : Assigns values to the commandLine template specified as part of the Application Description step
                  </para>
                  <alert class="note">
                    <para>Here with this JobArgs parameter, make sure all the parameters are named exactly the same as their counterparts in the ApplicationDescription</para>
                  </alert>

                </content>
              </step>

            </steps>
          </procedure>




          <para>
            <legacyBold>Next Topic:</legacyBold>
            <link xlink:href="7e60539b-775d-4eb4-b0e7-f971cfadeeeb"> Modeling your Job description according to the Application description written in the previous step</link>
          </para>


        </content>
      </section>




      <relatedTopics>
        <!-- One or more of the following:
  - A local link
  - An external link
  - A code entity reference

  <link xlink:href="Other Topic's ID"/>
  <link xlink:href="Other Topic's ID">Link inner text</link>

  <externalLink>
  <linkText>Link text</linkText>
  <linkAlternateText>Optional alternate link text</linkAlternateText>
  <linkUri>URI</linkUri>
  </externalLink>

  <codeEntityReference>API member ID</codeEntityReference>

  Examples:

  <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
  <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

  <externalLink>
  <linkText>SHFB on CodePlex</linkText>
  <linkAlternateText>Go to CodePlex</linkAlternateText>
  <linkUri>http://shfb.codeplex.com</linkUri>
  </externalLink>

  <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
  <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
  <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
  <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
  <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
  <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
  <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
  -->
      </relatedTopics>
    </developerConceptualDocument>
  </topic>
