<?xml version="1.0" encoding="utf-8"?>
<topic id="b8b0ed96-cdca-455b-9309-92337e7ff717" revisionNumber="1">
  <developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->
    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!-- <autoOutline /> -->
      <para>
        If the sample SecurityTokenService (STS) or the simple username / password security is used, users and passwords must
        be setup in a special table.
        This table is called “gwstsusers” and is used by the GenericWorker to lookup users and their corresponding passwords and rights.
      </para>
      <alert class="note">
        <para>
          If you are running Generic Worker locally, you may have changed the name of the user table in the registry settings.
          If this is the case you must use the same table name that you have used in the registry settings.
        </para>
      </alert>
      <para>To setup users there is a small tool called “STSInitializer” available. This tool can be found in the Installers folder.</para>
      <para>
        Here are the steps to install and run the STSInitalizer:
      </para>
      <para>If you previously installed the STSInitializer you can change the settings in the 2. step below directly in the STSInitializer.exe.config file in the installed directory.</para>
    </introduction>
    <!-- <prerequisites><content>Optional prerequisites info</content></prerequisites> -->
    <!-- One or more procedure or section with procedure -->

    <procedure>
      <title>Installing and Running STSInitialiter</title>
      <steps class="ordered">
        <step>
          <content>
            <para>
              Download and Install the <externalLink>
                <linkText>STSInitializer</linkText>
                <linkAlternateText>STSInitializer</linkAlternateText>
                <linkUri>http://resources.venus-c.eu/gw/installers/</linkUri>
                <linkTarget>_blank</linkTarget>
              </externalLink>.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Set the connection string of your storage account. If Azure storage emulator will be used the connection string should be UseDevelopmentStorage=true. Otherwise you have to specify the Connection String for your storage account.
              Leave the STS Table Name unchanged, if you are using an Azure storage account. If you are running on local storage, You must use the value of Microsoft.EMIC.Cloud.Development.STS.Azure.UserTableName in the registry for the STS Table Name field in order to fill that table with user information.
            </para>
            <mediaLink>
              <image xlink:href="image37"/>
            </mediaLink>
          </content>
        </step>
        <step>
          <content>
            <para>After installation, you can find the program in the start menu and run it.</para>
            <mediaLink>
              <image xlink:href="image38"/>
            </mediaLink>

            <para>
              <legacyBold>
                Result:
              </legacyBold>
            </para>
            <para>
              When you run the application, you will see the below image:
            </para>
            <mediaLink>
              <image xlink:href="image39"/>
            </mediaLink>
          </content>
        </step>
      </steps>
      <!-- <conclusion>Optional conclusion</conclusion> -->
    </procedure>
    <!-- Optional additional procedure or section with procedure -->
    <!-- Optional next steps info
    <nextSteps>
      <content><para>Next steps info goes here</para></content>
    </nextSteps>
    -->
    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID">Link text</link>
      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>
      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerWalkthroughDocument>
</topic>